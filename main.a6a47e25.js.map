{"version":3,"sources":["scripts/main.js"],"names":["populations","document","querySelectorAll","totalPopulation","querySelector","averagePopulation","populationsCalc","map","node","innerText","populationsToNum","replace","reduce","a","b","averagePopulationCalc","length","stringWithSeparators","currentValue","populationsCalcToArray","toString","split","i","splice","join","populationsToString","averagePopulationToString"],"mappings":";AAAA,aA0BA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAxBA,IAAMA,EAAcC,SAASC,iBAAiB,eACxCC,EAAkBF,SAASG,cAAc,qBACzCC,EAAoBJ,SAASG,cAAc,uBAE3CE,EAAkB,EAAIN,GACzBO,IAAI,SAAAC,GAAQA,OAAAA,EAAKC,YACjBF,IAAI,SAAAG,GAAoB,OAACA,EAAiBC,QAAQ,KAAM,MACxDC,OAAO,SAACC,EAAGC,GAAMD,OAAAA,EAAIC,IAClBC,EAAwBT,EAAkB,EAAIN,GAAagB,OAE3DC,EAAuB,SAAAC,GAGtB,IAFCC,IAAAA,EAAyBD,EAAaE,WAAWC,MAAM,IAEpDC,EAAIH,EAAuBH,OAAS,EAAGM,EAAI,EAAGA,GAAQ,EAC7DH,EAAuBI,OAAOD,EAAG,EAAG,KAG/BH,OAAAA,EAAuBK,KAAK,KAG/BC,EAAsBR,EAAqBX,GAC3CoB,EAA4BT,EAAqBF,GAEvDZ,EAAgBM,UAAgBgB,GAAAA,OAAAA,GAChCpB,EAAkBI,UAAgBiB,GAAAA,OAAAA","file":"main.a6a47e25.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst populations = document.querySelectorAll('.population');\nconst totalPopulation = document.querySelector('.total-population');\nconst averagePopulation = document.querySelector('.average-population');\n\nconst populationsCalc = [...populations]\n  .map(node => node.innerText)\n  .map(populationsToNum => +populationsToNum.replace(/,/g, ''))\n  .reduce((a, b) => a + b);\nconst averagePopulationCalc = populationsCalc / [...populations].length;\n\nconst stringWithSeparators = currentValue => {\n  const populationsCalcToArray = currentValue.toString().split('');\n\n  for (let i = populationsCalcToArray.length - 3; i > 0; i = i - 3) {\n    populationsCalcToArray.splice(i, 0, ',');\n  }\n\n  return populationsCalcToArray.join('');\n};\n\nconst populationsToString = stringWithSeparators(populationsCalc);\nconst averagePopulationToString = stringWithSeparators(averagePopulationCalc);\n\ntotalPopulation.innerText = (`${populationsToString}`);\naveragePopulation.innerText = (`${averagePopulationToString}`);\n"]}